module.exports = function(data){data=data||{};var p=[];p.push('(function(){   '); if (data.isMultiChunk) { p.push('   var onloadCallbacks = [];   var loadStatus = {};   function load(url) {    var s = document.createElement("script");    s.type = "text/javascript";    s.async = true;    s.src = url;    s.onload = s.onreadystatechange = function(){     if (!s.readyState || /loaded|complete/.test(s.readyState)) {      s.onload = s.onreadystatechange = null;      if (loadStatus.hasOwnProperty(url) && (loadStatus[url] === 2)) {       return;      }      loadStatus[url] = 2;      var j = onloadCallbacks.length;      while(j--) {       if (!getMissingChunkIds(onloadCallbacks[j][0]).length) {        var data = onloadCallbacks[j][0];        var fn = onloadCallbacks[j][1];        onloadCallbacks.splice(j,1);        fn.apply(undefined,getExports(typeof data[0] === "string" ? [data] : data));       }      }     }       };    var el = document.getElementsByTagName("head")[0] || document.documentElement;    el.insertBefore(s,el.firstChild);   };   function require(data,cb) {    if (typeof cb !== "function") {     return getExports(data);    }    var missingChunkIds = getMissingChunkIds(data);    if (!missingChunkIds.length) {     cb.apply(undefined,getExports(typeof data[0] === "string" ? [data] : data));    } else {     onloadCallbacks.push([data,cb]);     var i = missingChunkIds.length;     while(i--) {      if (!loadStatus.hasOwnProperty(missingChunkIds[i])) {       loadStatus[missingChunkIds[i]] = 1;       load(missingChunkIds[i]);      }         }    }   };   function getMissingChunkIds(data) {    if (typeof data[0] === "string") {     data = [data];    }    var missing = [];    var i = data.length;    while(i--) {     if (!window[',data.chunkGlobalVar,'].hasOwnProperty(data[i][0])) {      missing.push(data[i][0]);     }    }    return missing;   };   '); } p.push('   function getExports(data) {    if (typeof data[0] === "string") {     try {      var fn = window[',data.chunkGlobalVar,'][data[0]][data[1]];     } catch(e) {      throw new Error("Module " + data + "not found.");      }     if (fn.hasOwnProperty("__module")) {      return fn.__module.exports;     }     var module;     var exports = {};     fn.__module = module = { exports: exports };     fn.call(      undefined,      '); if (data.isMultiChunk) { p.push('       require      '); } else { p.push('       getExports      '); } p.push(',      module,      exports     );     return module.exports;    }    var ret = [];    for (var i = 0; i < data.length; i++) {     ret.push(getExports(data[i]));    }    return ret;   };   window[',data.chunkGlobalVar,'] = window[',data.chunkGlobalVar,'] || {};   getExports([',data.entryChunk,',',data.entryModule,']);  })();');return p.join('');}